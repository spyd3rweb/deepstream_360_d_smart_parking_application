1. Get the application URL by running these commands:
{{- range $service, $val := .Values.services }}
{{- $serviceOverride := mergeOverwrite ( index $.Values $val.container_name | default dict ) $.Values.default }}
{{- $serviceName := $serviceOverride.fullnameOverride | default $val.container_name }}
{{- printf "%s:" $serviceName }}
{{- if $serviceOverride.ingress.enabled }}
{{- range $host := $serviceOverride.ingress.hosts }}
  {{- range .paths }}
  http{{ if $serviceOverride.ingress.tls }}s{{ end }}://{{ $host.host }}{{ . }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" $serviceOverride.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ $.Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "analytics-server.fullname" $ }})
  export NODE_IP=$(kubectl get nodes --namespace {{ $.Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" $serviceOverride.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ $.Release.Namespace }} svc -w {{ include "analytics-server.fullname" $ }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ $.Release.Namespace }} {{ include "analytics-server.fullname" $ }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ $serviceOverride.service.port }}
{{- else if contains "ClusterIP" $serviceOverride.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ $.Release.Namespace }} -l "app.kubernetes.io/name={{ include "analytics-server.name" $ }},app.kubernetes.io/instance={{ $.Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ $.Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}
{{- end }}
